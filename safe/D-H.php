<?php

/* 

迪菲 - 赫尔曼密钥交换

根据素数 P、生成元 G 和“GX mod P”求出 X 的问题就是“离散对数问题”，人们
至今还未找到这个问题的解法，而迪菲 - 赫尔曼密钥交换正是利用了这个数学难题。

使用迪菲 - 赫尔曼密钥交换，通信双方仅通过交换一些公开信息就可以实现密钥
交换。但实际上，双方并没有交换密钥，而是生成了密钥。因此，该方法又被叫作“迪
菲 - 赫尔曼密钥协议

非保护信道中`创建`共享密钥方法

参考:

1. <<我的第一本算法书>> 之  安全算法
2. 素数与生成元 https://blog.csdn.net/chengqiuming/article/details/83003859
3. https://baike.baidu.com/item/迪菲-赫尔曼密钥交换
*/

/* 

场景:

A -> B  A 与B 通信

1. 首先，由 A 来准备素数P和生成元G。 这两个数公开也没有关系 // A 生成 `素数与生成元`(公钥组成?)
2. A将素数P和生成元G发送给B. // 传输过程1 ,单向
3. A,B 根据 自己的 私密数字(私钥) , 与 P&G (A的公钥) , 进行运算 的出 合成数 (合成秘钥) , 发送给对方 // 传输过程2 , 双向
4. 拿到对方的 合成数(对方的合成秘钥), 再与自己的私密数字(私钥) ,  进行运算,  双方即可得出相同的 数字(即可作为加解密的 共享秘钥))

即使, 第三者 监视全过程 不能计算出 A B 的 私钥,
通信的 双方 也不能 计算出 对方的 秘钥

其他:

暴力破解? 时间 , 定期换密码.

这个 三次 传输,  三次握手? 

*/

// P G , A 的 公钥? 可公开数据 数字
$P = 13; // 一个素数
$G = 2; // 生成元

//注意  x & y  < P-2
$x =  7; // A 的私钥, 私密数字
$y =  5; // B 的私钥

$GxP = $G**$x%$P; // A 的  A公钥&私钥的 合成

// $G = 3; // 模拟篡改 , 所以还需要 验证

$GyP = $G**$y%$P; //B 的   A公钥$私钥的 合成

echo "A: G^x mod P = $GxP",',',"\n",$G,',',$x,',',$P,',',$GxP,"\n\n"; // G^x mod P = 合成 , 2^x mod 13 = 11 ,  x   不能通过公式,或者有限的步骤计算出来  , 只能暴力猜, 所以相对很安全!!

echo "B: G^y mod P = $GyP",',',"\n",$G,',',$y,',',$P,',',$GyP,"\n";



$AGyP = $GyP**$x%$P; // A 交换后的合成 , $GyP ^ x mod P => (G^y mod P) ^ x mod P => G^(x*y) mod P
$BGxP = $GxP**$y%$P; // B 交换后的合成 , $Gxp ^ y mod P => (G^x mod P) ^ y mod P => G^(x*y) mod P

$PAsBs = $G**($x*$y)%$P; // 

echo $AGyP,$BGxP,$PAsBs,"\n";


/* 
P: PG -- P: PG
Sa: x -- Sb: y

pSa -- PSb // 合成

PSbSa -- PSaSb // 交换再合成

 */








